-- Haskell Playground 1.0
[1..100]
2 + 15
1852 - 1472
5 / 2
50 * 100 - 4999
50 * (100 - 4999)
True && True
True || True
not False
not (True && True)
5 == 5
1 == 0
5 /= 5
5 /= 4
"Hello" == "Hello"
succ 8
succ '1'
succ 'a'
succ 'A'
min 9 10
succ 9 + max 5 4 + 1
div 9 10
92 `div` 10

doubleMe 10
doubleUs 10 20
doubleSmallNumber 10
doubleSmallNumber 200

-- LIST

[1,2] ++ [3,4]
"Hello" ++ " " ++ "world"
['w', 'o'] ++ ['o', 't']
'A': " SMALL CAT"

"Steve Buscemi" !! 6

[9.4, 33.2] !! 1

let b = [[1,2], [3,4]]
b ++ [[7,8]]
[6,6] : b

[3,2,1] > [2,10000]

head [5,4,3,2,1] == 5
tail [5,4,3,2] == [4,3,2]
last [5,4,3,2] == 2

head []

length [1,2,3] == 3

null [1,2,3]
null []
reverse [5,4,3,2,1]

take 3 [5,4,3,2,1]
take 5 [1,2]
take 0 [6,6,6]

drop 3 [8,4,2,1,5,6]
drop 1 [1,2,3,4]
drop 100 [1,2,3,4]

minimum [84,2]
maximum [1,2,3,4,100]

sum [5,2,1,6,3,2,5,7]
product [6,2,1,2]

elem 4 [3,4,5,6]
elem 10 [100,100]

[1..20]
['a' ..'z']
['k' ..'z']

[2,4..20]
[2,6..20]

take 10 (cycle [1,2,3])

[x * 2 | x <- [1..10]]
[x * 2 | x <- [1..10], x * 2 >= 12]









